import { createElement } from 'react';
import { withCSSContext } from '@emotion/core';
import { insertStyles, shouldSerializeToReactTree } from '@emotion/utils';

var Style = withCSSContext(function (props, context) {
  var rules = '';
  var hash = '';

  if (Array.isArray(props.styles)) {
    props.styles.forEach(function (style) {
      var renderedStyle = insertStyles(context, style);

      if (renderedStyle !== undefined) {
        // $FlowFixMe
        rules += renderedStyle;
        hash += " " + style.name;
      }
    });
  } else {
    var renderedStyle = insertStyles(context, props.styles);

    if (renderedStyle !== undefined) {
      rules = renderedStyle; // $FlowFixMe

      hash += " " + props.styles.name;
    }
  }

  if (shouldSerializeToReactTree && rules !== '') {
    var _ref;

    return createElement("style", (_ref = {}, _ref["data-emotion-" + context.key] = hash.substring(1), _ref.dangerouslySetInnerHTML = {
      __html: rules
    }, _ref));
  }

  return null;
});

export default Style;
//# sourceMappingURL=index.es.js.map
